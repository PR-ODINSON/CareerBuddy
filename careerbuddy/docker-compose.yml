version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: careerbuddy_postgres
    environment:
      POSTGRES_DB: careerbuddy_db
      POSTGRES_USER: careerbuddy
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U careerbuddy -d careerbuddy_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: careerbuddy_backend
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://careerbuddy:password@postgres:5432/careerbuddy_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: careerbuddy_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
